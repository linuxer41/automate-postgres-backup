name: Publish Docker image
    
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/ci-cd.yml'
      - '*.sh'
      - '.dockerignore'
      - 'Dockerfile'
      - '!readme.md'
      - '!license'
      - '!.gitignore'
    # if: github.event.repository.full_name == github.repository
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/ci-cd.yml'
      - '*.sh'
      - '.dockerignore'
      - 'Dockerfile'
      - '!readme.md'
      - '!license'
      - '!.gitignore''
      
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/postgres-docker-gcs-backup
            ghcr.io/${{ github.repository_owner }}/postgres-docker-gcs-backup
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          # context: "{{defaultContext}}:client"
          context: .
          file: "./Dockerfile"
          # platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/postgres-docker-gcs-backup:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/postgres-docker-gcs-backup:buildcache,mode=max